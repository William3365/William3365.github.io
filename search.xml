<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Raid</title>
    <url>/2023/08/23/Raid/</url>
    <content><![CDATA[<h1 id="RAID"><a href="#RAID" class="headerlink" title="RAID"></a>RAID</h1><ul>
<li>QA<ul>
<li>为什么要做raid？<ul>
<li>花小钱办大事，提供容错机制</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="基础概念"><a href="#基础概念" class="headerlink" title="基础概念"></a>基础概念</h2><ul>
<li><p>RAID，独立（廉价）冗余磁盘阵列，简称磁盘阵列，一种多磁盘管理技术</p>
</li>
<li><p>用多个独立的磁盘组成在一起形成一个大的磁盘系统，从而实现比单块磁盘更好的存储性能和更高的可靠性。</p>
</li>
<li><p>技术架构：数据条带、镜像、数据校验技术</p>
<ul>
<li><p>根据运用或组合运用这三种技术的策略和架构，可以把 RAID 分为不同的等级，以满足不同数据应用的需求</p>
</li>
<li><p>RAID0 - RAID6 七个等级，还有组合raid</p>
<ul>
<li>标准 RAID 等级各有优势和不足。把多个 RAID 等级组合起来，实现互补，组合等级的实现成本一般都非常昂贵，只是在 少数特定场合应用</li>
</ul>
</li>
<li><p>在实际应用领域中使用最多的 RAID 等级是 RAID0 、 RAID1 、 RAID3 、 RAID5 、 RAID6 和 RAID10、RAID01。</p>
</li>
<li><p>每一个等级代表一种实现方法和技术，等级之间并无高低之分。在实际应用中，应当根据用户的数据应用特点，综合考虑可用性、性能和成本来选择合适的 RAID 等级，以及具体的实现方式。</p>
</li>
</ul>
</li>
<li><p>区分：</p>
<ul>
<li><p>软 RAID，</p>
<pre class="line-numbers language-none"><code class="language-none">无独立的RAID控制卡，由操作系统和CPU来实现所有的RAID功能。

占用CPU资源，如果操作系统出现故障，则RAID信息会丢失，RAID功能将不可用。

跟硬RAID比性能差，但成本低。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>硬 RAID </p>
<pre class="line-numbers language-none"><code class="language-none">拥有独立的RAID控制卡，通过RAID卡实现所有的RAID功能，不占用CPU资源。

性能好，但成本高。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>软硬混合 RAID ，成本、性能居中</p>
</li>
</ul>
</li>
<li><p>热备盘</p>
<ul>
<li>当损坏的盘超出限制，热备盘就会临时顶替掉损坏的磁盘，继续维持原来的数据正常运转，相当于磁盘的最后一层保险</li>
</ul>
</li>
<li><p>raid0</p>
<ul>
<li><strong>最少要用两个磁盘（偶数数量的磁盘）</strong>，一般不单独使用</li>
<li>例：2T + 2T &#x3D; 4T</li>
<li><strong>不提供数据冗余保护，单个硬盘故障将导致阵列上的所有数据丢失</strong></li>
<li>视频、音频存储、打印等</li>
</ul>
</li>
<li><p>raid1</p>
<ul>
<li><strong>最少要用两个磁盘（偶数数量的磁盘）</strong></li>
<li>例：2T + 2T &#x3D; 2T</li>
<li>数据安全性最高，对硬盘上的数据进行镜像，以在发生硬盘故障时提供容错能力</li>
<li>成本高，磁盘空间利用率为50%，一半的空间用于存储冗余数据</li>
<li>邮件、数据库</li>
</ul>
</li>
<li><p>raid5</p>
<ul>
<li><strong>最少3块</strong></li>
<li>例：2T + 2T+ 2T &#x3D; 4T</li>
<li>读取性能相对高，磁盘空间利用率大于RAID 10，<strong>允许1个物理磁盘发生故障，而不丢失数据</strong>（可以理解为 RAID0 和 RAID1 的折中方案，是目前综合性能最佳的数据保护解决方案）</li>
<li>写入性能相对低，重建数据时，性能会受到较大的影响</li>
<li>适用于金融、数据库等</li>
</ul>
</li>
<li><p>raid6</p>
<ul>
<li><strong>最少四块硬盘</strong></li>
<li>例：2T + 2T + 2T + 2T &#x3D; 4T</li>
<li>读取性能较高，磁盘空间利用率大于RAID 10，<strong>允许2个物理磁盘发生故障，而不丢失数据</strong></li>
<li>成本高于RAID 5，写入性能较低（低于RAID 5）</li>
<li>对数据安全要求非常高、成本同样重要的场景，它一般是替代RAID 10经济性选择。如金融、数据库等</li>
</ul>
</li>
<li><p>raid10</p>
<ul>
<li><strong>最少四块硬盘</strong></li>
<li>例：2T + 2T + 2T + 2T &#x3D; 4T</li>
<li><strong>RAID 1与RAID 0的结合，先创建RAID 1，再创建RAID 0</strong></li>
<li>读取性能仅次于RAID 0，磁盘没有全部故障，数据就不会丢失。一半磁盘故障时，仍可正常运转</li>
<li>成本高。磁盘空间利用率50%，一半的空间用于存储冗余数据</li>
<li>于读写性能要求高，数据安全大于磁盘成本的场景。如银行、数据库等。</li>
</ul>
</li>
<li><p>raid50</p>
<ul>
<li><strong>至少需要六个硬盘</strong></li>
<li>例：2T + 2T + 2T + 2T + 2T + 2T &#x3D; 8T</li>
<li>RAID 5 + 0</li>
</ul>
</li>
<li><p>raid60</p>
<ul>
<li><strong>最少需要八个硬盘</strong></li>
<li>例：2T + 2T + 2T + 2T + 2T + 2T + 2T + 2T &#x3D; 8T</li>
<li>比 RAID 50 阵列更可靠</li>
</ul>
</li>
</ul>
<h2 id="raid选型"><a href="#raid选型" class="headerlink" title="raid选型"></a>raid选型</h2><ul>
<li><p>从I&#x2F;O性能、成本、容错三个因素来选择</p>
<pre class="line-numbers language-none"><code class="language-none">如果不考虑容错，选择RAID 0可获得高I&#x2F;O性能。

如果I&#x2F;O性能、容错都重要，而成本不是主要因素，可选择RAID 1。

如果I&#x2F;O性能、成本、容错都重要，则根据磁盘数、可用容量、允许故障硬盘数选择RAID 5、RAID 6、RAID 10、RAID 50或RAID 60

容量&gt;性能，raid50、raid10
数据保护，raid6、raid60
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul>
<li><p>组建RAID时，建议使用硬盘型号、容量完全一样的企业级硬盘。</p>
</li>
<li><p>组建RAID会删除硬盘上的所有数据，如有需要请先备份硬盘上的旧数据。</p>
</li>
<li><p>已组建RAID的硬盘上存有残留的RAID信息，如需再次组建RAID，需先清除这些信息。</p>
</li>
<li><p>先配置raid，再按需分区，最后装系统</p>
</li>
<li><p>raid和non-raid</p>
<ul>
<li>不做raid的时候，改成non-raid，这样就可以被系统直接识别</li>
<li>non-raid非阵列模式（普通模式），即可独立识别每一块磁盘</li>
</ul>
</li>
</ul>
<h2 id="配置Raid流程"><a href="#配置Raid流程" class="headerlink" title="配置Raid流程"></a>配置Raid流程</h2><ul>
<li>1、改sata模式为raid</li>
<li>2、做raid</li>
<li>3、boot mode模式按需选择</li>
</ul>
<p>1、检查硬件，可正常工作、安装连接无误</p>
<p>2、根据读盘结果，按需将磁盘转为raid或no-raid</p>
<p>3、查看虚拟磁盘配置结果，normal(正常)，ready（可用配置raid），online（可用在线）</p>
]]></content>
      <tags>
        <tag>Raid</tag>
      </tags>
  </entry>
  <entry>
    <title>cmd</title>
    <url>/2023/08/19/cmd/</url>
    <content><![CDATA[<p>【网络测试命令】<br>ping——测试网络是否通畅<br>tracert——追踪路由，也可以用来查看网络连通性<br>telnet——查看目的主机ip的端口号是否开放<br>ifconfig——查看本机网络</p>
<p>【关于路由命令】<br>route print——显示路由，查看网关</p>
<p>【操作文件命令】<br>cd ——显示当前目录<br>cd .. ——进入上级目录<br>md 目录名（文件夹）——创建文件夹<br>rd 目录名（文件夹）——删除文件夹<br>del 文件名——删除文件 </p>
<p>【其他常用命令】<br>shutdown -s  ——关机<br>control——打开控制面板<br>notepad——打开记事本<br>regedit——打开注册表<br>ctrl+c——终止一直在运行的命令</p>
]]></content>
      <tags>
        <tag>cmd</tag>
      </tags>
  </entry>
  <entry>
    <title>centos7</title>
    <url>/2023/08/19/centos7/</url>
    <content><![CDATA[<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ul>
<li><p>安装完成，拔出U盘，重启进入bios将启动顺序恢复至原来的顺序，<strong>无论安装什么系统，都要这样!!!</strong></p>
<p>其实大多数设备拔U盘之后，读不到U盘，就直接从系统盘读了，但是有时多系统，多硬盘的话，最好设置下启动项</p>
</li>
<li><blockquote>
<ul>
<li>sata模式： stata AHCI （一般选择它，兼容模式）    # 如果需要做Raid，选择raid模式</li>
<li>write cache enabled 启用</li>
<li>引导模式：UEFI（推荐）</li>
</ul>
</blockquote>
</li>
</ul>
<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><p>重启：reboot<br>查看驱动器：ls &#x2F;dev&#x2F;sd*<br>详细信息：blkid</p>
<h2 id="bug"><a href="#bug" class="headerlink" title="bug"></a>bug</h2><h3 id="读不到U盘"><a href="#读不到U盘" class="headerlink" title="读不到U盘"></a>读不到U盘</h3><ul>
<li><p>报错，<code>Warning: /dev/root does not exist</code></p>
</li>
<li><p>分析</p>
<ul>
<li>系统识别的U盘名和开机启动时设置的命名不一致，造成无法识别<ul>
<li>用UltraISO刻录镜像装机时会出现 Warning：dracut-initqueue timeout - starting timeout scripts 报错，原因在于系统找不到该镜像所在的正确位置，需要手动更改</li>
</ul>
</li>
</ul>
</li>
<li><p>解决</p>
<ul>
<li>先查看自己的u盘设备名称，<strong>ls &#x2F;dev&#x2F;sd</strong>*</li>
<li>然后  <strong>blkid</strong> 查看类型，记住，然后重启<strong>reboot</strong></li>
<li>选择安装项，然后<strong>e</strong>或者<strong>tab</strong>进入编辑，<br>在<strong>linux16</strong>那边，<strong>inst.stage2&#x3D;hd:LABEL&#x3D;CentOS\x207\x20x86_64</strong>，更改为<strong>inst.stage2&#x3D;hd:&#x2F;dev&#x2F;U盘设备名</strong>，</li>
<li><strong>回车</strong>或者<strong>ctrl+x</strong>，即可正常安装</li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>centos7</tag>
      </tags>
  </entry>
  <entry>
    <title>github代理问题</title>
    <url>/2023/08/10/github%E4%BB%A3%E7%90%86%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<ul>
<li>443问题<br>因为使用clash进行互联网活动，所以有时打开github会有报错，比如在拉取、推送、克隆的时候常报错。</li>
</ul>
<p><code>git报错：Failed to connect to github.com port 443 after 21084 ms: Couldn‘t connect to serve</code></p>
<p>解决办法：<br>直接关闭代理，然后重新刷新DNS缓存，用cmd打开windows命令窗口，输入：<br><code>ipconfig/flushdns</code></p>
<ul>
<li>22问题<pre class="line-numbers language-none"><code class="language-none">ssh: connect to host github.com port 22: Connection timed out
fatal: Could not read from remote repository.

这个错误提示的是连接github.com的22端口被拒绝了。

解决办法：
1、使用443
ssh -T git@github.com。还是报错
执行命令ssh -T -p 443 git@ssh.github.com 后不再提示connection refused
在git branch中进行
     vim ~&#x2F;.ssh&#x2F;config
     
     Host github.com
       Hostname ssh.github.com
       Port 443

     ssh -T git@github.com
     Hi xxxxx! You&#39;ve successfully authenticated, but GitHub does not provide shell access. 成功

     ![](https:&#x2F;&#x2F;s1.ax1x.com&#x2F;2023&#x2F;08&#x2F;25&#x2F;pPNktxO.png)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
]]></content>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo杂谈</title>
    <url>/2023/08/19/hexo%E6%9D%82%E8%B0%88/</url>
    <content><![CDATA[<h2 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h2><ul>
<li><p>技术栈 hexo+githubpages+vercel</p>
</li>
<li><p>说明</p>
<ul>
<li><p>一般hexo+githubpages+vercel搭建，网上有很多教程，本文不做具体描述</p>
<ul>
<li><p>搭建<code>http://t.csdn.cn/T7e5I</code></p>
</li>
<li><p>优化<code>https://wdstql.github.io/2021/08/03/matery/</code></p>
</li>
</ul>
</li>
<li><p>本文有以下个注意点：</p>
<ul>
<li>常规的hexo+githubpages搭建方法，只是将public下的文件，所以hexo生成的博客文件这只会造成在git托管了博客页面，没有托管源码，不便于我们管理</li>
<li>本站采用git分支进行管理，利用hexo默认部署的方式，再将blog部署在main分支上然后创建分支，对源码（md文件和其他源文件）进行管理。</li>
<li>将源码分支下载到本地，并清空分支中的东西，然后将.git文件复制到hexo根目录，即可还是原来的操作，只需再加入git的操作</li>
</ul>
</li>
<li><p>使用</p>
<blockquote>
<p>hexo clean 清理<br>hexo new xxx 新建文章，hexo new page xxx  新建页面<br>hexo g 生成页面<br>hexo s 运行<br>hexo d 上传部署  INFO  Deploy done: git 表示成功<br>然后git同步即可</p>
</blockquote>
</li>
</ul>
</li>
</ul>
<h2 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h2><h3 id="配置admin后台管理系统"><a href="#配置admin后台管理系统" class="headerlink" title="配置admin后台管理系统"></a>配置admin后台管理系统</h3><pre><code>* 不用再md文件里直接写，可以避免很多语法、格式问题
  <pre class="line-numbers language-none"><code class="language-none">安装：npm install --save hexo-admin
运行：hexo server -d
地址：http:&#x2F;&#x2F;localhost:4000&#x2F;admin&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
* 添加用户名密码
  <pre class="line-numbers language-none"><code class="language-none">根目录_config.yml

admin:
username:&#x2F;&#x2F;用户名
password_hash:&#x2F;&#x2F;用户名密码不喜欢的可以不设置，这里通过bcrypt hash
secret: hey hexo deploy&#x2F;&#x2F;用以cookies安全；
Command: <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</code></pre>
<h3 id="重新安装hexo"><a href="#重新安装hexo" class="headerlink" title="重新安装hexo"></a>重新安装hexo</h3><ul>
<li>一般主题文件需要重新安装，因为主题文件也是一个git仓库</li>
<li>git clone <a href="https://github.com/blinkfox/hexo-theme-matery.git">https://github.com/blinkfox/hexo-theme-matery.git</a></li>
<li>解决：删除主题文件夹中的.git文件夹，这样就可以将主题文件一起上传了</li>
</ul>
<h3 id="多平台部署-国内外分流"><a href="#多平台部署-国内外分流" class="headerlink" title="多平台部署-国内外分流"></a>多平台部署-国内外分流</h3><ul>
<li>采用github、gitee，流程差不多，需要注意的是，GitHub可以自动更新，gitee需手动</li>
<li>书写格式，网上教程很多也很旧，自己多写试试</li>
<li>协议问题，github采用ssh协议，gitee采用http协议，别问为什么，问就是踩坑大半天！当然这个也是因人而异，只是提供一种排查思路</li>
<li>分支最好也一致<pre class="line-numbers language-none"><code class="language-none">deploy:
type: git 
repo:
    github: git@github.com
    gitee: git@gitee.com
branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
<h3 id="本地运行预览正常，部署上线无效果"><a href="#本地运行预览正常，部署上线无效果" class="headerlink" title="本地运行预览正常，部署上线无效果"></a>本地运行预览正常，部署上线无效果</h3><ul>
<li>可能是浏览器缓存问题，ctrl+F5，强制刷新</li>
<li>可能是分支问题，尤其是的两个特殊点，1本案例采用的部署一个分支，源码一个分支的方式，2本案例双平台部署存在自动和手动问题。更要注意比如GitHub是main分支，gitee是master分支，这里提供思路就是去比较分支的提交和活跃，就知道代码被提交到哪里了，再看部署选择的是哪一个分支</li>
</ul>
]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu</title>
    <url>/2023/08/30/ubuntu/</url>
    <content><![CDATA[<h3 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h3><ul>
<li><p>UEFI + GPT</p>
</li>
<li><p>制作U盘启动盘的时候，官网下载的是混合镜像，可以iso加载，可以dd加载，推荐iso</p>
</li>
</ul>
<h3 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h3><ul>
<li><p>Ubantu默认禁止使用root用户，登录的是普通用户，要么切root，要么sudo，大多数命令都要带sudo</p>
<blockquote>
<p>登录之后是普通用户，设置root密码</p>
<p><code>sudo passwd root </code></p>
</blockquote>
</li>
</ul>
<h3 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h3><ul>
<li><code>apt</code></li>
<li>centos  <code>yum</code></li>
</ul>
<h3 id="配置静态ip"><a href="#配置静态ip" class="headerlink" title="配置静态ip"></a>配置静态ip</h3><blockquote>
<ul>
<li><p>ip a   # 查看 网卡</p>
</li>
<li><p>cd &#x2F;etc&#x2F;netplan </p>
</li>
<li><p>ls   # 查看.yaml文件</p>
</li>
<li><p>sudo vi yaml文件     # 用文本编辑器打开</p>
</li>
<li><p>编辑</p>
<pre class="line-numbers language-none"><code class="language-none">yaml对格式、缩进有严格要求！！！

网卡名
   dhcp4: false    # 动态改成false
      addresses: [192.168.3.86&#x2F;24]   # 前面是ip地址，24对应的子网掩码是255.255.255.0
      gateway4: 192.168.3.1    # 网关
      nameservers:
        addresses: [192.168.3.1]   # DNS<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>退出vi文本编辑器</p>
</li>
<li><p>sudo netplan apply  # 保存</p>
</li>
</ul>
</blockquote>
]]></content>
      <tags>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>windows server</title>
    <url>/2023/08/19/windows%20server/</url>
    <content><![CDATA[<p>工作流程<br>1、装设备、装系统<br>2、设置用户、配ip、配端口<br>3、服务器管理器，开启【远程桌面，远程管理】，设置防火墙<br>4、测试，ping通，远程通<br>5、交付</p>
<p>&#x3D;&#x3D;&#x3D;》<br>1、tft电脑，test，远程桌面连接测试<br>2、测试机，登录把tft电脑顶掉，测试<br>3、测试通过<br>4、用一楼的电脑进行远程连接测试<br>tips：<br>1、服务器管理器，开启，远程桌面、远程管理</p>
<p>&#x3D;&#x3D;&#x3D;》<br>1、测试配置新ip<br>    –配置成功、ping成功、远程桌面成功<br>tips：<br>1、windows防火墙，入站规则，<br>    开启：—否则无法远程连接<br>        远程桌面（tcp-in 用户模式）<br>        远程桌面（udp-in 用户模式）<br>              —否则无法ping通<br>        核心网络诊断-icmp 回显请求（icmpv4-in） &#x2F; 文件和打印机共享（回显请求-icmpv4-in）<br>        核心网络诊断-icmp 回显请求（icmpv4-in）<br>&#x3D;&#x3D;&#x3D;》<br>2、测试修改端口号，在注册表中修改的，改成22789。防火墙中配置，然后重启remot desktop service<br>    –配置成功、【telnet ip 端口（跳到空窗口）】成功、远程桌面成功<br>tips：<br>1、配置端口：<br>    注册表中，修改两处端口号PortNumber，<br>    （<br>        路径1：hkey_local_machine\system\currentcontrolset\control\terminal server\wds\rdpwd\tds\tcp<br>        路径2：hkey_local_machine\system\currentcontrolset\control\terminal server\winstations\rdp-tcp<br>     ）<br>    服务，remot desktop services 重启<br>    防火墙中新建入站规则–端口号</p>
]]></content>
      <tags>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>周报</title>
    <url>/2023/08/19/%E5%91%A8%E6%8A%A5/</url>
    <content><![CDATA[<p>入职第一周<br>本人前端程序员一名，因故回到县城老家，找不到工作，改行做机房运维，记录0基础运维成长</p>
<p>第一天，简单看了下培训文档和基本信息资料，然后领导交代制作pe系统盘，有一说一，这个东西是计算机人的基础，大学也都学过，但是我不会，我从来没用U盘装过系统。<br>使用大白菜一键制作U盘。不知道为什么，中间做一半电脑卡死了，弄坏了一个U盘，直接读不出来了。然后就是去网上找iso镜像，有一说一，国内的这些网站广告是真的多。需要的系统文件有windows server 2008、2021、2022、centos7.x。找到之后，就开始了漫长的下载，由于网络问题，10点开始下载，下午1点才下载好。<br>下载好之后，网上教程说用软碟通刻录、直接复制拷贝等等。我用软碟通但是安装的时候一直中文乱码，然后就用复制解压到U盘的方法,windows系统要求做在一个盘里，cent的做在另一个盘里。解压的过程中，要么是空间不够，要么电脑半路卡死。奇奇怪怪，我之前电脑从来没卡死过，8代i5，16+256+512，以前开机7s，现在都是20s。奇奇怪怪。<br>到了下班点，WindowsU盘还没弄好，回家接着弄。</p>
<p>two<br>U盘弄好了，但是尝试在虚拟机中装系统，一直出错，win是卡死，centos是网卡配置出错。<br>然后跟着领导学习装系统，遇到的问题是，下载的镜像不全，不干净，导致缺少网卡驱动。初步认识了windows server 系统。<br>发现自己关于计算机网络、硬件知识认知不足，起码不全面，懂一点，但是不多，不深。有空给他系统学一学。<br>关于linux，之前学了基础的命令，但是也都忘得七七八八了，抽空给多练练，关于软件安装部署那块，抓紧学了，找到规律和共性</p>
<p>three<br>装ws2008、2012、2022，并且配置ip、端口，尝试远程连接，ping，telnet</p>
<p>foure<br>装centos7，配置网络，开关防火墙，学习防火墙相关知识，安装gui界面、对比使用cli和gui</p>
<p>five<br>装宝塔面板并学习使用，了解网络相关知识，不同主板系统bios区别差异，学习cmd的其他常用知识</p>
]]></content>
      <tags>
        <tag>复盘</tag>
      </tags>
  </entry>
  <entry>
    <title>linux重点内容</title>
    <url>/2023/08/19/linux/</url>
    <content><![CDATA[<p>linux运维：</p>
<ul>
<li>网络配置，防火墙，管理远程主机</li>
<li>用户、用户组配置</li>
<li>软件安装部署，文件操作</li>
</ul>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>宝塔面板</title>
    <url>/2023/08/19/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/</url>
    <content><![CDATA[<p>内网，chrome无法登录，切换无痕模式即可、或者使用edge</p>
<p> systemctl status firewalld.service<br>firewall-cmd –zone&#x3D;public –add-port&#x3D;8888&#x2F;tcp –permanent<br>firewall-cmd –reload</p>
<p>firewall-cmd –list-all</p>
]]></content>
      <tags>
        <tag>宝塔面板</tag>
      </tags>
  </entry>
  <entry>
    <title>密码破解</title>
    <url>/2023/08/23/%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="密码破解"><a href="#密码破解" class="headerlink" title="密码破解"></a>密码破解</h1><h2 id="windows-server"><a href="#windows-server" class="headerlink" title="windows server"></a>windows server</h2><ul>
<li><p>忘记密码，进不去系统</p>
<ul>
<li>大白菜抹除</li>
</ul>
</li>
<li><p>忘记密码，能进系统，再操作</p>
<ul>
<li>pe启动修改osk和cmd</li>
</ul>
</li>
</ul>
<pre class="line-numbers language-none"><code class="language-none">用net user 去修改账号和密码 思路是这样的：
    修改登录界面其他功能的链接，使之成为CMD的链接，在CMD命令里面IIS7-VPS大全
	系统盘，进入windows\system32目录，找到 osk.exe，将其重命名，
    同样在此目录下找到 cmd.exe ，将其复制一份，并重命名为 osk.exe

    cd &#x2F;
    cd windows\system32   直接以管理员身份运行，直接定位到这
    rename osk.exe osk.exe.bak  拒绝访问，因为这个文件的管理员权限没开
    copy cmd.exe osk.exe  也可以接着直接修改

	教程一般说到登录界面修改，登录界面右下角红框处，右键点选“屏幕键盘 ”，
    此时会出现命令窗口,在命令窗口输入命令行，即可重设任何用户的密码，
    比如要重设Administrator密码，则输入：“net user administrator 123456”，
    到此密码重置完成，即可使用新密码登录系统
	
	正常登录，恢复原状，然后再把管理员权限也恢复
	del osk.exe
	rename osk.exe.bak osk.exe<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<h2 id="centos7"><a href="#centos7" class="headerlink" title="centos7"></a>centos7</h2><p>详细：<code>https://blog.csdn.net/weixin_52269666/article/details/121577724</code></p>
<p><img src="https://s1.ax1x.com/2023/08/23/pPJTYOH.png"></p>
<p><img src="https://s1.ax1x.com/2023/08/23/pPJTNmd.png"></p>
]]></content>
      <tags>
        <tag>工具类</tag>
      </tags>
  </entry>
  <entry>
    <title>戴尔PowerEdgeR620</title>
    <url>/2023/08/25/%E6%88%B4%E5%B0%94PowerEdgeR620/</url>
    <content><![CDATA[<h2 id="PERC-阵列卡"><a href="#PERC-阵列卡" class="headerlink" title="PERC 阵列卡"></a>PERC 阵列卡</h2><ul>
<li>PERC 是 PowerEdge Raid Controller 的缩写</li>
<li>前缀S表示为Software软件阵列，H 表示为Hardware 硬件阵列 ,</li>
<li>从入门到高端型号第一位数字分别用1 3 7 8 表示，</li>
<li>第二三位数字位为产品代数，</li>
<li>结尾P表示 Performance 高性能型。</li>
</ul>
<h2 id="PERC名词"><a href="#PERC名词" class="headerlink" title="PERC名词"></a>PERC名词</h2><ul>
<li>Disk Group：磁盘组，这里相当于是阵列，例如配置了一个RAID5，就是一个磁盘组。</li>
<li>VD：Virtual Disk， 虚拟磁盘，虚拟磁盘可以不使用阵列的全部容量，也就是说一个磁盘组可以分为多个VD。</li>
<li>PD：Physical Disk，物理磁盘。</li>
</ul>
<h2 id="配置Raid方法"><a href="#配置Raid方法" class="headerlink" title="配置Raid方法"></a>配置Raid方法</h2><ul>
<li>1、F10直接做在生命周期控制器中，F10可选中文，会重启很麻烦</li>
<li>2、F2在系统设置中做  —-√   简单明了</li>
<li>3、ctrl+R做，界面繁琐麻烦</li>
<li>问题：同样的raid级别，在ctrl+R中配置和在F2中配置，容量会不一样，不知道为什么！</li>
</ul>
<h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><ul>
<li>1、改sata模式为raid</li>
<li>2、做raid</li>
<li>3、boot mode模式按需选择</li>
</ul>
<h2 id="bugs"><a href="#bugs" class="headerlink" title="bugs"></a>bugs</h2><ul>
<li>在安装系统时，系统文件里，不带有RAID 1的驱动程序，导致安装系统无法识别到RAID 1 的硬盘。需要手动加载 RAID 卡驱动程序</li>
<li>raid版本和主板版本可能存在版本问题，注意匹配</li>
</ul>
]]></content>
      <tags>
        <tag>服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>磁盘</title>
    <url>/2023/08/30/%E7%A3%81%E7%9B%98/</url>
    <content><![CDATA[<h1 id="磁盘-Disk"><a href="#磁盘-Disk" class="headerlink" title="磁盘 Disk"></a>磁盘 Disk</h1><ul>
<li><p>名词：DISK 磁盘、硬盘</p>
</li>
<li><p>磁盘作用：存储数据</p>
</li>
<li><p>种类：机械硬盘、固态硬盘</p>
<ul>
<li>根据接口分类：<ul>
<li>SATA（支持热插拔和热交换）</li>
<li>SAS（主要用于企业级服务器和存储系统。支持热插拔功能）</li>
<li>SCSI</li>
<li>NVMe（基于PCIe基于PCIe总线，主要用于ssd）</li>
</ul>
</li>
</ul>
</li>
<li><p>文件格式：FAT32，NTFS，exFAT</p>
</li>
<li><p>分区格式：mbr，guid（gpt）</p>
</li>
<li><p>步骤：先分区，选择文件系统，格式化</p>
</li>
</ul>
<h2 id="简而言之"><a href="#简而言之" class="headerlink" title="简而言之"></a>简而言之</h2><ul>
<li><p>磁盘、分区、分区表、文件系统，格式化之间关系理解</p>
<ul>
<li>一个<strong>磁盘</strong>（好比一个衣柜ssd,hdd），要先<strong>分区</strong>（分成几个块，哪一块放什么mbr,gpt），然后<strong>格式化</strong>（清理干净）然后选择<strong>文件系统</strong>（衣服怎么放，叠起来还是卷起来ext4,ntfs），<strong>挂载</strong>目录（给对应区域写上标签），最后正常使用<strong>文件</strong>（放衣服）</li>
<li>先fdisk&#x2F;parted分区，再针对分区mkfs格式化为某种文件系统，然后挂载</li>
</ul>
</li>
<li><p>linux一切皆文件</p>
<ul>
<li>linux采用文件夹模式，在linux中，新的硬盘加入也是以文件夹的方式挂载到主分区</li>
</ul>
</li>
</ul>
<h2 id="文件系统"><a href="#文件系统" class="headerlink" title="文件系统"></a>文件系统</h2><ul>
<li><p>定义并实现了数据在存储介质上的组织方式和结构，以及如何被访问，那组织的⽅式不同，就会形成不同的⽂件系统</p>
<img src="https://s1.ax1x.com/2023/08/29/pPaW5En.png" style="zoom: 50%;" />
</li>
<li><p>一言以蔽之</p>
<pre class="line-numbers language-none"><code class="language-none">* FAT32格式兼容性好，但不支持4GB以上的文件

* NTFS格式支持大容量文件和超大分区，但对闪盘芯片有伤害(SSD和U盘同为闪存，但SSD还是用NTFS格式好)

* exFAT格式是最适合windows U盘的

* 如果你经常需要在Linux和Windows上用U盘互相传文件，而且Linux核心版本又比较低，推荐还是FAT32,不考虑兼容使用exFAT。(用FTP或者SCP不香吗？)


* 在linux上，一般情况下最好使用ext4文件系统，因为其向后兼容性很好，你可以把ext2、ext3的文件系统按照ext4挂载。并且ext4可以有效减少碎片，对于SSD和HDD硬盘是很好的选择。
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
<h3 id="FAT32"><a href="#FAT32" class="headerlink" title="FAT32"></a>FAT32</h3><ul>
<li><p><strong>文件分配表</strong>，是采用<strong>32位二进制数</strong>记录管理的磁盘文件管理方式</p>
</li>
<li><p>优点：是稳定性和兼容性好，且维护方便</p>
</li>
<li><p>缺点：安全性差，且最大只能支持<strong>32GB</strong>分区，单个文件也只能支持最大<strong>4GB</strong>。</p>
</li>
<li><p>其他：fat、fat16</p>
</li>
</ul>
<h3 id="NTFS"><a href="#NTFS" class="headerlink" title="NTFS"></a>NTFS</h3><ul>
<li><strong>WINdowsNT</strong> 和高级服务器网络操作系统环境的文件系统，并且 <em>NTFS</em> 是一个<strong>日志文件系统</strong>，这意味着除了向磁盘中写入信息，该文件系统还会为所发生的所有改变保留一份日志。</li>
<li><strong>NTFS</strong> 设计初衷是提供比 <em>FAT32</em> 更高的可靠性，并消除 <em>FAT32</em> 文件系统容量限制。它除了支持更大的分区和文件、更节约硬盘空间外，还提供了 <em>FAT32</em> 文件系统不能提供的<strong>长文件名、压缩分区、事件追踪、文件索引、高容错性、数据保护和恢复以及加密访问</strong>等功能</li>
<li>在发生错误的时候很快恢复正常，而且不会丢失任何数据。</li>
<li>针对传统机械硬盘而设计的。它采用了一种<strong>日志式</strong>的文件系统，需要频繁记录磁盘的详细读写操作，会给<strong>U盘</strong>或 <strong>SSD</strong> 这类储介质带来额外的负担。比如同样存取一个文件或目录，<em>NTFS</em> 分区格式的读写次数就比 <em>FAT32</em> 多得多，因此理论上<strong>使用NTFS格式分区的U盘寿命更短</strong>。</li>
</ul>
<h3 id="exFAT"><a href="#exFAT" class="headerlink" title="exFAT"></a>exFAT</h3><ul>
<li><p>既弥补了 <em>FAT32</em> 的局限性和缺点，又没有 <em>NTFS</em> 那些会影响U盘寿命的功能</p>
</li>
<li><p>分区大小和支持的单个文件大小最大可达16EB，存储单位灵活最小为0.5KB，最高可达32MB，空间利用率更高</p>
</li>
</ul>
<h3 id="ext4"><a href="#ext4" class="headerlink" title="ext4"></a>ext4</h3><ul>
<li>日志文件系统、第四代扩展文件系统，表结构</li>
<li>支持单个文件的大小高达16TB，支持不同分区上以不同方式存储数据的功能，支持文件虚拟化，空间回收</li>
<li>其他：ext2、ext3</li>
</ul>
<h3 id="XFS"><a href="#XFS" class="headerlink" title="XFS"></a>XFS</h3><ul>
<li>centos7默认</li>
<li>64 位高性能日志文件系统，树结构</li>
<li>单个、最大支持8EB，支持并行IO操作，RAID上的扩展性更好，多线程并行读写时比Ext4有优势</li>
</ul>
<h3 id="Btrfs"><a href="#Btrfs" class="headerlink" title="Btrfs"></a>Btrfs</h3><ul>
<li>B-Tree File System的缩写，可以读作“butter fs”或“b-tree fs”</li>
</ul>
<h3 id="tmpfs"><a href="#tmpfs" class="headerlink" title="tmpfs"></a>tmpfs</h3><ul>
<li>临时文件系统，是一种基于内存的文件系统</li>
<li><strong>devtmps</strong>  <ul>
<li>设备文件系统，它将其所有文件保存在虚拟内存中。所有内容都是临时的<ul>
<li>根路径在&#x2F;dev</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="vfs"><a href="#vfs" class="headerlink" title="vfs"></a>vfs</h3><ul>
<li><p>虚拟文件系统</p>
</li>
<li><p><strong>vfat</strong> 虚拟文件分配表，是作为FAT文件系统的一种扩展。</p>
</li>
</ul>
<h2 id="分区表"><a href="#分区表" class="headerlink" title="分区表"></a>分区表</h2><h3 id="分区"><a href="#分区" class="headerlink" title="分区"></a>分区</h3><ul>
<li>分区（分盘），划分磁盘空间，对磁盘划分 逻辑边界，提升安全性和利用率<ul>
<li>比一个衣柜，划分成多个分区，第一分区用来放内衣袜子，第二分区用来存放上衣，第三分区用来存放裤子，放袜子的区域乱了不影响其他区域</li>
</ul>
</li>
</ul>
<h3 id="分区表-1"><a href="#分区表-1" class="headerlink" title="分区表"></a>分区表</h3><ul>
<li><p>记录了磁盘上每个分区的位置、大小和类型等信息，有 mbr格式，guid格式（gpt格式）</p>
</li>
<li><p>mbr分区</p>
<ul>
<li><p>启动时，引导模式为 Legacy（bios）</p>
</li>
<li><p>最大只能支持2 TB 的硬盘空间</p>
</li>
<li><p>最多支持 4 个主分区（如果想要更多分区，要创建<strong>扩展分区</strong>，并在其中创建<strong>逻辑分区</strong>），一般是<strong>主分区+扩展分区</strong></p>
<ul>
<li><p>主分区：</p>
<blockquote>
<p>不可以再进行二次分区。可以用来引导、启动操作系统 </p>
</blockquote>
<blockquote>
<p>主分区可以直接建立文件系统，存储数据</p>
</blockquote>
</li>
<li><p>扩展分区：</p>
<blockquote>
<p>本身不承载空间。主要就是增加分区数量</p>
</blockquote>
<blockquote>
<p>不能创建文件系统，可以划分逻辑分区</p>
</blockquote>
<p>逻辑分区：可以创建文件系统，存放数据，逻辑分区的数量没有限制</p>
</li>
</ul>
<img src="https://s1.ax1x.com/2023/08/28/pPaEUUJ.png" style="zoom: 50%;" /></li>
</ul>
</li>
<li><p>guid分区</p>
<ul>
<li>启动时，引导模式为 uefi</li>
<li>主备模式，主区Primary ，备区Secondary</li>
<li>分区数量几乎没有限制，每一个分区都可以独立存在，没有扩展分区、逻辑分区的概念，即所有分区都是主分区。</li>
<li></li>
</ul>
</li>
</ul>
<h2 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a>格式化</h2><ul>
<li><p>对硬盘或存储设备进行初始化，清除存储设备上的所有数据</p>
</li>
<li><p>一般过程</p>
<ul>
<li><p>先格式化文件系统</p>
<pre class="line-numbers language-none"><code class="language-none">mkfs.xfs &#x2F;dev&#x2F;sdXXX<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>关闭文件自检系统</p>
<pre class="line-numbers language-none"><code class="language-none">tune2fs


[root@localhost tmp]# tune2fs -c -1 &#x2F;dev&#x2F;sda1
tune2fs 1.42.9 (28-Dec-2013)
Setting maximal mount count to -1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
</li>
</ul>
<h2 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h2><ul>
<li><p>linux中一切都是文件，<strong>挂载</strong>就是把目录和文件关联起来，访问此目录就等同于访问此文件，否则能看见文件，但是命令找不到文件</p>
</li>
<li><p>挂载操作会使得原有目录中文件被隐藏，因此根目录以及系统原有目录都不要作为挂载点，会造成系统异常甚至崩溃，挂载点最好是新建的空目录。（linux上的文件夹就是挂载点）</p>
</li>
<li><p>一个路径挂载一个物理磁盘，就不能在这个路径下挂载其他新的物理磁盘 ，路径与硬盘挂载1：1关系</p>
</li>
<li><p><img src="https://s1.ax1x.com/2023/08/28/pPaCZBd.png"></p>
</li>
<li><p>【 mount  要挂载的设备  挂载点】</p>
<ul>
<li><p>将指定的文件挂载到指定的目录</p>
<pre class="line-numbers language-none"><code class="language-none">-l  显示系统的所有挂载信息
-t  指定设备的文件系统类型，否则mount自动选择文件系统类型
-o  添加挂载的功能选项
-r  挂载后设备只读
-w  允许读写操作，rw权限



[root@localhost tmp]# mount &#x2F;dev&#x2F;sda1 &#x2F;tmp&#x2F;tftTest1
[root@localhost tmp]# lsblk -f
lsblk: dm-3：获取设备路径失败
NAME      FSTYPE      LABEL UUID                                   MOUNTPOINT
sda                                                                
├─sda1    xfs               bb9996f9-83e5-491b-87d8-9cc5efe9c7b4   &#x2F;tmp&#x2F;tftTest1
....
[root@localhost tmp]# mount -l |grep sda1
&#x2F;dev&#x2F;sda1 on &#x2F;tmp&#x2F;tftTest1 type xfs (rw,relatime,seclabel,attr2,inode64,noquota)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
</li>
<li><p>【 umount  挂载点 】</p>
<ul>
<li><p>取消挂载</p>
<pre class="line-numbers language-none"><code class="language-none">[root@localhost tftTest1]# mount &#x2F;dev&#x2F;sda1 &#x2F;tmp&#x2F;tftTest1   # 挂载设备sda1到挂载点tftTest1
[root@localhost tmp]# lsblk -f    # 查看
lsblk: dm-3：获取设备路径失败
NAME      FSTYPE      LABEL UUID                                   MOUNTPOINT
sda                                                                
├─sda1    xfs               bb9996f9-83e5-491b-87d8-9cc5efe9c7b4   &#x2F;tmp&#x2F;tftTest1

[root@localhost tmp]# cd tftTest1 # 进入挂载点，查看磁盘设备内的文件
[root@localhost tftTest1]# ls
aoligei.txt
[root@localhost tftTest1]# cd ..   # 退出目录
[root@localhost tmp]# umount &#x2F;tmp&#x2F;tftTest1    # 取消挂载
[root@localhost tmp]# cd tftTest1
[root@localhost tftTest1]# ls    #看不到文件


挂载点相当于给这个分区装了个门，让我们能够进出、访问<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
</li>
</ul>
<h3 id="交换分区管理swap（windows称为虚拟内存）"><a href="#交换分区管理swap（windows称为虚拟内存）" class="headerlink" title="交换分区管理swap（windows称为虚拟内存）"></a>交换分区管理swap（windows称为虚拟内存）</h3><ol>
<li>swap是硬盘的一个特殊分区，让读取快一点，一般存储热点数据</li>
<li>当内存不够的时候，才申请swap空间，只要空间足够，就不需要swap空间</li>
</ol>
<h3 id="逻辑卷LVM"><a href="#逻辑卷LVM" class="headerlink" title="逻辑卷LVM"></a>逻辑卷LVM</h3><ol>
<li>目的：管理磁盘的一种方式，性质与基本磁盘无异</li>
<li>特点：随意扩张大小</li>
<li>术语：PV&#x3D;物理卷（physical volume）；VG&#x3D;卷组（volume group）；LV&#x3D;逻辑卷（logical volume）</li>
</ol>
<p>* </p>
<h2 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h2><ul>
<li><p>【 fdisk 】</p>
<ul>
<li><p>分区命令，&lt;2T，不支持GPT</p>
<pre class="line-numbers language-none"><code class="language-none">fdisk &#x2F;dev&#x2F;sdxxx

m帮助参数：
 n   add a new partition
 p   print the partition table
 q   quit without saving changes
 w   write table to disk and exit
 
n
 Partition type:
   p   primary (0 primary, 0 extended, 4 free)
   e   extended
 一直默认就行，选择大小   +200G
 
w 保存退出

[root@localhost tmp]# fdisk &#x2F;dev&#x2F;sda
命令(输入 m 获取帮助)：p

命令(输入 m 获取帮助)：n
Partition type:
   p   primary (0 primary, 0 extended, 4 free)
   e   extended
Select (default p): p
分区号 (1-4，默认 1)：
起始 扇区 (2048-3907029167，默认为 2048)：
将使用默认值 2048
Last 扇区, +扇区 or +size&#123;K,M,G&#125; (2048-3907029167，默认为 3907029167)：+200G
分区 1 已设置为 Linux 类型，大小设为 200 GiB

命令(输入 m 获取帮助)：w
The partition table has been altered!

Calling ioctl() to re-read partition table.
正在同步磁盘。
   
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
</li>
<li><p>【 parted 】</p>
<ul>
<li><p>分区命令，&gt;2T，支持MBR和GPT分区表</p>
</li>
<li><pre><code>p 分区
q 退出


parted /dev/sdXXXX
mklabel gpt   # 改为gpt分区表   msdos代表mbr

mkpart primary 0 480G 分一个sdxx1 从0到480G
Ignore
mkpart logic 480G 580G 分一个sdxx2 从480G到580G   注：这里的逻辑分区不需要建立在扩展分区上。
<pre class="line-numbers language-none"><code class="language-none">
* 【 lsblk 】

  * 列出所有设备及文件系统信息 
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
lsblk -f
<pre class="line-numbers language-none"><code class="language-none">
    

* 【 mkfs 】

  * 将分区格式化为某种文件系统。支持ext4、NTFS
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</code></pre>
</li>
</ul>
<p>mkfs.ext4 &#x2F;dev&#x2F;sda1    mkfs+tab,查看支持类型	</p>
<pre class="line-numbers language-none"><code class="language-none">
  

* 【 fsck 】

  * 修复文件系统，默认读取 &#x2F;etc&#x2F;fstab 开机挂载文件
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>  修改&#x2F;etc&#x2F;fstab文件，<br>  例：<br>  &#x2F;dev&#x2F;mapper&#x2F;centos-root &#x2F;                       xfs     defaults        0 0    # 结尾0不检查，1检查</p>
<p>  fsck -t 文件系统类型 设备名</p>
<p>  fsck -t ext4 &#x2F;dev&#x2F;sda1<br>  &#x2F;dev&#x2F;sda1: clean</p>
<pre><code>
</code></pre>
</li>
<li><p>【xfs_info】</p>
<ul>
<li>查看文件系统属性， centos7默认xfs文件系统，</li>
</ul>
</li>
<li><p>【 tune2fs 】</p>
<ul>
<li>设置linux开机是否自检文件系统是否正常</li>
</ul>
</li>
<li><p>【 df -hT 】</p>
<ul>
<li>以磁盘分区为单位查看信息</li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>计算机基础</tag>
      </tags>
  </entry>
  <entry>
    <title>工具类QA</title>
    <url>/2023/08/19/%E5%B7%A5%E5%85%B7%E7%B1%BBQA/</url>
    <content><![CDATA[<ul>
<li>软碟通解决：<ul>
<li>控制面板\时钟和区域——更改日期、时间或数字格式——管理——更改系统区域设置——beat版，使用unicode utf-8  取消勾选</li>
</ul>
</li>
<li>pe启动U盘：<ul>
<li>大白菜做好，测试好之后，直接把iso文件复制粘贴进去就好</li>
<li>USB-HDD模式：硬盘仿真模式，兼容性很高，适用于新机型，但对于一些只支持USB-ZIP模式的电脑则无法启动，<strong>一般制作U盘启动盘选择该模式</strong>。</li>
<li>USB-ZIP模式：大容量软盘仿真模式，在一些比较老的电脑上是唯一可选的模式，对新电脑来说兼容性不好，特别是2GB以上的大容量U盘。</li>
</ul>
</li>
<li>PE系统<br>PE是指Windows 预安装环境 (Windows PE) 是在Windows内核上构建的具有有限服务的最小 Win32 子系统，说白了就是把系统写进U盘里；iso是一种光盘镜像文件格式，装系统的过程说简单点都是把系统原版ISO镜像里的系统文件或者GHO压缩镜像里的系统文件写入C盘并给C盘加上引导程序的过程，如果说两种安装方式有区别那就是有些第三方制作的PE里可以附加程序，比如可以加入一些万能的驱动程序，或者嵌入一些广告应用程序等等，而纯净的系统ISO安装是不夹带这些的。</li>
</ul>
]]></content>
      <tags>
        <tag>工具类</tag>
      </tags>
  </entry>
  <entry>
    <title>配置Raid和系统安装</title>
    <url>/2023/08/25/%E9%85%8D%E7%BD%AERaid%E5%92%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h1 id="核心思路"><a href="#核心思路" class="headerlink" title="核心思路"></a>核心思路</h1><ul>
<li>先配置raid，再按需分区，最后装系统<pre class="line-numbers language-none"><code class="language-none">* 先做raid准备好存储空间，然后按照需求进行分区和格式化，最后装系统
  理解：就像先把房间分配好了才能进一步装修、入住

* 必须选择分区模式，必须进行格式化

* 如果系统是安装在raid盘上就必须先配置raid，再安装系统。
  如果使用独立的系统盘，可以先安装系统，再配置raid（此时可以在系统下使用有GUI的raid管理程序已图形方式配置raid，但是影响效率，占内存），之后再使用系统磁盘管理分区、格式化。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
<h1 id="分区模式和引导模式"><a href="#分区模式和引导模式" class="headerlink" title="分区模式和引导模式"></a>分区模式和引导模式</h1><h2 id="分区表"><a href="#分区表" class="headerlink" title="分区表"></a>分区表</h2><ul>
<li><p>磁盘分区模式有mbr格式，guid格式（gpt格式）</p>
</li>
<li><p>mbr分区：硬盘主引导记录分区表，只支持容量在 2TB 以下的硬盘，支持win7版本系统以下的32位和64位</p>
</li>
<li><p>guid分区：也叫gpt，全局唯一标识分区表，支持2T以上的硬盘分区，GPT可管理硬盘大小达到了18EB，支持win7版本以上的64位系统（不支持32位系统）,比如win8、win10系统</p>
</li>
<li><p>区别：</p>
<ul>
<li><p>mbr分区</p>
<ul>
<li><p>&lt; 2T,选择mbr分区表</p>
</li>
<li><p>启动时，引导模式为 Legacy（bios）</p>
</li>
<li><p>最多只能描述 4 个分区，其中一个为主分区，其他为扩展分区，</p>
</li>
</ul>
</li>
<li><p>guid分区</p>
<ul>
<li><p>大于2T,选择guid分区表</p>
</li>
<li><p>启动时，引导模式为 uefi</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p>注意：</p>
<ul>
<li><p>对应的分区模式要选择对应的引导模式</p>
</li>
<li><p>根据自己的raid需求，再bios中选择对应的引导模式</p>
</li>
<li><p>大于2t只能选择guid引导，否则做raid没意义，读不到那么大的容量</p>
</li>
</ul>
</li>
<li><p>如何判断硬盘格式是 guid 还是 mbr ？</p>
<ul>
<li><p>windows</p>
<pre class="line-numbers language-none"><code class="language-none">&#39;以管理员身份运行&#39;cmd命令，输入&#39;diskpart&#39;命令
输入&#39;list disk&#39;命令进行查看：如果&#39;Gpt&#39;中显示&#39;*&#39;，则为GPT格式，反之为MBR
![](https:&#x2F;&#x2F;s1.ax1x.com&#x2F;2023&#x2F;08&#x2F;25&#x2F;pPNFw40.png)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>linux</p>
<pre class="line-numbers language-none"><code class="language-none">1、fdisk -l 命令，结果中的“Disk label type”的值为
     dos则分区是mbr，若该结果的值为gpt则分区是gpt；
2、parted -l 命令，结果中的“Partition Table”的值为
     msdos则分区是mbr，若该结果的值为gpt则分区是gpt。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
</li>
</ul>
<h2 id="引导模式"><a href="#引导模式" class="headerlink" title="引导模式"></a>引导模式</h2><ul>
<li><p>在bios中配置，有Legacy（bios）和 uefi</p>
</li>
<li><p>区别</p>
<ul>
<li>UEFI是新式的BIOS，BIOS则是传统legacy。最明显的却别在于启动速度，UEFI明显更快，因为它支持硬件加速和并行处理。</li>
<li><img src="https://s1.ax1x.com/2023/08/30/pPd6L9S.png" alt="img"></li>
</ul>
</li>
</ul>
<h1 id="windows-server"><a href="#windows-server" class="headerlink" title="windows server"></a>windows server</h1><ul>
<li><p>核心：根据raid需求，选择合适的磁盘分区模式，合适的引导模式</p>
</li>
<li><p>流程</p>
<ul>
<li>配置raid</li>
<li>配置引导模式</li>
<li>配置磁盘的分区格式，格式化处理</li>
</ul>
</li>
</ul>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul>
<li><p>有的统文件里，不带有raid驱动程序，导致安装系统无法识别到raid的硬盘。需要去官网下载，手动加载 raid 卡驱动程序</p>
</li>
<li><p>找不到适用的引导分区</p>
<ul>
<li>分区工具修复、重新分区</li>
<li>可能是系统找不到raid驱动，导致找不到磁盘，去官网找对应主板的驱动，装上。</li>
</ul>
</li>
</ul>
<h1 id="centos"><a href="#centos" class="headerlink" title="centos"></a>centos</h1><ul>
<li><p>核心：根据raid需求，选择合适的磁盘分区模式，合适的引导模式</p>
<ul>
<li>linux默认mbr分区模式，所以配raid后，先改分区模式、配置分区，最后装系统 （否则易出现读不到盘，容量不对的情况）<ul>
<li>一般直接在 控制台，改成guid分区，uefi引导</li>
</ul>
</li>
</ul>
</li>
<li><p>流程</p>
<ul>
<li>配置raid</li>
<li>配置引导模式</li>
<li>配置磁盘的分区格式，格式化处理</li>
</ul>
</li>
</ul>
<h2 id="重要概念"><a href="#重要概念" class="headerlink" title="重要概念"></a>重要概念</h2>]]></content>
      <tags>
        <tag>系统安装</tag>
      </tags>
  </entry>
</search>
